{"version":3,"file":"static/js/636.443e2057.chunk.js","mappings":"wKAuBA,IAnBA,WACE,OACEA,EAAAA,EAAAA,KAACC,EAAAA,GAAc,CACbC,SAAS,YACTC,UAAW,KACXC,iBAAe,EACfC,aAAW,EACXC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAW,EACXC,cAAc,EACdC,MAAM,UACNC,WAAYC,EAAAA,GACZC,MAAO,CAAEC,QAAS,QAGxB,C,uGCnBaC,E,QAAyBC,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uzD,mBCmChD,EAlCyB,WACvB,OACEnB,EAAAA,EAAAA,KAACgB,EAAsB,CAAAI,UACrBC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,gBAAYpB,EAAAA,EAAAA,KAAA,QAAAoB,SAAM,UACtBC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,EACEpB,EAAAA,EAAAA,KAAA,QAAAoB,SAAM,WACNpB,EAAAA,EAAAA,KAAA,SACEsB,KAAK,OACLC,KAAK,OACLC,QAAQ,2HACRC,WAAS,EACTC,UAAU,IACVC,UAAU,OACVC,UAAQ,QAGZP,EAAAA,EAAAA,MAAA,SAAAD,SAAA,EACEpB,EAAAA,EAAAA,KAAA,QAAAoB,SAAM,YACNpB,EAAAA,EAAAA,KAAA,SAAOsB,KAAK,QAASK,UAAU,QAAQC,UAAQ,QAEjDP,EAAAA,EAAAA,MAAA,SAAAD,SAAA,EACEpB,EAAAA,EAAAA,KAAA,QAAAoB,SAAM,eACNpB,EAAAA,EAAAA,KAAA,SAAOsB,KAAK,WAAWI,UAAU,IAAIG,UAAU,KAAKD,UAAQ,QAE9D5B,EAAAA,EAAAA,KAAA,UAAQsB,KAAK,SAAQF,SAAC,aACtBC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,6BACwBpB,EAAAA,EAAAA,KAAC8B,EAAAA,GAAI,CAACC,GAAG,SAAQX,SAAC,oBAKrD,E,oBCjBA,EAZiB,WACf,IAAMY,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAE9B,OACEb,EAAAA,EAAAA,MAAA,QAAAD,SAAA,EACEpB,EAAAA,EAAAA,KAACmC,EAAgB,IAChBH,IAAahC,EAAAA,EAAAA,KAACoC,EAAAA,EAAM,KACrBpC,EAAAA,EAAAA,KAACqC,EAAAA,EAAY,MAGnB,C,sECbaH,EAAgB,SAAAI,GAAK,OAAIA,EAAMC,SAASP,SAAU,GAIzBQ,EAAAA,EAAAA,IACpC,CAN4B,SAAAF,GAAK,OAAIA,EAAMC,SAASE,KAAM,EAGhC,SAAAH,GAAK,OAAIA,EAAMI,MAAO,IAIhD,SAACH,EAAUG,GACT,OAAOH,EAASG,QAAO,SAAAC,GAAO,OAC5BA,EAAQpB,KAAKqB,cAAcC,SAASH,EAAOE,cAAcE,OAAO,GAEpE,G","sources":["components/Notification/Notification.jsx","components/RegistrationForm/RegistrationForm.styled.js","components/RegistrationForm/RegistrationForm.jsx","pages/Register.jsx","redux/selectors.js"],"sourcesContent":["import { ToastContainer } from 'react-toastify';\nimport { Zoom } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction Notification() {\n  return (\n    <ToastContainer\n      position=\"top-right\"\n      autoClose={2500}\n      hideProgressBar\n      newestOnTop\n      closeOnClick\n      rtl={false}\n      pauseOnFocusLoss\n      draggable={false}\n      pauseOnHover={false}\n      theme=\"colored\"\n      transition={Zoom}\n      style={{ opacity: '0.8' }}\n    />\n  );\n}\n\nexport default Notification;\n","import styled from 'styled-components';\n\nexport const StyledRegistrationForm = styled.div`\n  display: inline-block;\n  width: 100vw;\n\n  form {\n    width: 600px;\n    height: 500px;\n    margin: 100px auto;\n    padding: 50px;\n    background-color: #fff;\n    border-radius: 10px;\n    box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px,\n      rgba(0, 0, 0, 0.23) 0px 6px 6px;\n  }\n\n  h2 {\n    font-size: 40px;\n    margin-bottom: 30px;\n    font-family: 'REM';\n  }\n\n  h2 span {\n    color: #fff500;\n  }\n\n  label {\n    width: 350px;\n    height: 25px;\n    display: flex;\n    gap: 20px;\n    margin-bottom: 20px;\n  }\n\n  span {\n    margin-top: 2px;\n  }\n\n  input {\n    width: 100%;\n    padding: 0 5px;\n    border: none;\n    border-bottom: 2px dotted #bbbbbb;\n    font-size: 15px;\n    outline: none;\n    color: black;\n    z-index: 3;\n    letter-spacing: 0.1em;\n    font-family: 'IBM Plex Mono';\n    background-color: white !important;\n    color: gray;\n  }\n\n  input.name, input.email {\n    padding-left: 35px;\n  }\n\n  input:valid {\n    color: black;\n  }\n\n  /* label::after {\n    content: '✓';\n    font-size: 25px;\n    position: relative;\n    left: -42px;\n    bottom: 8px;\n    z-index: 2;\n    color: #fff500;\n    font-weight: bold;\n  } */\n\n  button {\n    display: inline-block;\n    width: 160px;\n    margin: 48px 0 68px 190px;\n    padding: 12px;\n    border: none;\n    border-radius: 20px;\n    font-size: 16px;\n    font-weight: 700;\n    letter-spacing: 0.1em;\n    background-color: #fff500;\n    transition: box-shadow 250ms ease;\n  }\n\n  button:hover {\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 6px -1px,\n      rgba(0, 0, 0, 0.06) 0px 2px 4px -1px;\n  }\n\n  p {\n    text-align: right;\n    font-size: 14px;\n  }\n\n  a {\n    color: black;\n    padding: 3px;\n    border-radius: 5px;\n    font-weight: bolder;\n    transition: text-decoration 250ms ease;\n  }\n`;\n","import { StyledRegistrationForm } from './RegistrationForm.styled';\nimport { Link } from 'react-router-dom';\n\nconst RegistrationForm = () => {\n  return (\n    <StyledRegistrationForm>\n      <form>\n        <h2>Registration<span>.</span></h2>\n        <label>\n          <span>Name </span>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            autoFocus\n            minLength=\"2\"\n            className='name'\n            required\n          />\n        </label>\n        <label>\n          <span>Email </span>\n          <input type=\"email\"  className='email' required/>\n        </label>\n        <label>\n          <span>Password </span>\n          <input type=\"password\" minLength=\"6\" maxLength=\"12\" required/>\n        </label>\n        <button type=\"Submit\">SIGN UP</button>\n        <p>\n          Already have an account? <Link to=\"/login\"> Sign in</Link>\n        </p>\n      </form>\n    </StyledRegistrationForm>\n  );\n};\n\nexport default RegistrationForm;\n","import Loader from 'components/Loader/Loader';\nimport Notification from 'components/Notification/Notification';\nimport RegistrationForm from 'components/RegistrationForm/RegistrationForm';\nimport { useSelector } from 'react-redux';\nimport { selectLoading } from 'redux/selectors';\n\nconst Register = () => {\n  const isLoading = useSelector(selectLoading);\n\n  return (\n    <main>\n      <RegistrationForm/>\n      {isLoading && <Loader />}\n      <Notification />\n    </main>\n  );\n};\n\nexport default Register;","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase().trim())\n    );\n  }\n);\n"],"names":["_jsx","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","transition","Zoom","style","opacity","StyledRegistrationForm","styled","_templateObject","_taggedTemplateLiteral","children","_jsxs","type","name","pattern","autoFocus","minLength","className","required","maxLength","Link","to","isLoading","useSelector","selectLoading","RegistrationForm","Loader","Notification","state","contacts","createSelector","items","filter","contact","toLowerCase","includes","trim"],"sourceRoot":""}