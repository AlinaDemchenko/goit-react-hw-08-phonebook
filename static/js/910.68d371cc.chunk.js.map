{"version":3,"file":"static/js/910.68d371cc.chunk.js","mappings":"wKAuBA,IAnBA,WACE,OACEA,EAAAA,EAAAA,KAACC,EAAAA,GAAc,CACbC,SAAS,YACTC,UAAW,KACXC,iBAAe,EACfC,aAAW,EACXC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAW,EACXC,cAAc,EACdC,MAAM,UACNC,WAAYC,EAAAA,GACZC,MAAO,CAAEC,QAAS,QAGxB,C,mFCJA,UAZiB,WACf,IAAMC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAE9B,OACEC,EAAAA,EAAAA,MAAA,QAAAC,SAAA,EACEpB,EAAAA,EAAAA,KAAA,MAAAoB,SAAI,aACHJ,IAAahB,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,KACrBrB,EAAAA,EAAAA,KAACsB,EAAAA,EAAY,MAGnB,C,sECZaJ,EAAgB,SAAAK,GAAK,OAAIA,EAAMC,SAASR,SAAU,GAIzBS,EAAAA,EAAAA,IACpC,CAN4B,SAAAF,GAAK,OAAIA,EAAMC,SAASE,KAAM,EAGhC,SAAAH,GAAK,OAAIA,EAAMI,MAAO,IAIhD,SAACH,EAAUG,GACT,OAAOH,EAASG,QAAO,SAAAC,GAAO,OAC5BA,EAAQC,KAAKC,cAAcC,SAASJ,EAAOG,cAAcE,OAAO,GAEpE,G","sources":["components/Notification/Notification.jsx","pages/Contacts.jsx","redux/selectors.js"],"sourcesContent":["import { ToastContainer } from 'react-toastify';\nimport { Zoom } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction Notification() {\n  return (\n    <ToastContainer\n      position=\"top-right\"\n      autoClose={2500}\n      hideProgressBar\n      newestOnTop\n      closeOnClick\n      rtl={false}\n      pauseOnFocusLoss\n      draggable={false}\n      pauseOnHover={false}\n      theme=\"colored\"\n      transition={Zoom}\n      style={{ opacity: '0.8' }}\n    />\n  );\n}\n\nexport default Notification;\n","import Loader from 'components/Loader/Loader';\nimport Notification from 'components/Notification/Notification';\nimport { useSelector } from 'react-redux';\nimport { selectLoading } from 'redux/selectors';\n\nconst Contacts = () => {\n  const isLoading = useSelector(selectLoading);\n\n  return (\n    <main>\n      <h1>Contacts</h1>\n      {isLoading && <Loader />}\n      <Notification />\n    </main>\n  );\n};\n\nexport default Contacts;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase().trim())\n    );\n  }\n);\n"],"names":["_jsx","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","transition","Zoom","style","opacity","isLoading","useSelector","selectLoading","_jsxs","children","Loader","Notification","state","contacts","createSelector","items","filter","contact","name","toLowerCase","includes","trim"],"sourceRoot":""}