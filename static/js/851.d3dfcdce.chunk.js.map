{"version":3,"file":"static/js/851.d3dfcdce.chunk.js","mappings":"wKAuBA,IAnBA,WACE,OACEA,EAAAA,EAAAA,KAACC,EAAAA,GAAc,CACbC,SAAS,YACTC,UAAW,KACXC,iBAAe,EACfC,aAAW,EACXC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAW,EACXC,cAAc,EACdC,MAAM,UACNC,WAAYC,EAAAA,GACZC,MAAO,CAAEC,QAAS,QAGxB,C,6FCnBaC,E,QAAkBC,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,krD,oFCmCzC,EAhCkB,WAChB,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACErB,EAAAA,EAAAA,KAACgB,EAAe,CAAAM,UACdC,EAAAA,EAAAA,MAAA,QAAMC,SAPa,SAAAC,GACrBA,EAAIC,iBACJN,EAAS,YAAa,CAAEO,SAAS,GACnC,EAImCL,SAAA,EAC7BC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,SACGtB,EAAAA,EAAAA,KAAA,QAAAsB,SAAM,UAEbtB,EAAAA,EAAAA,KAAA,OAAK4B,IAAKC,EAAMC,IAAI,UACpBP,EAAAA,EAAAA,MAAA,SAAAD,SAAA,EACEtB,EAAAA,EAAAA,KAAA,QAAAsB,SAAM,YACNtB,EAAAA,EAAAA,KAAA,SAAO+B,KAAK,QAAQC,UAAQ,QAE9BT,EAAAA,EAAAA,MAAA,SAAOU,UAAU,WAAUX,SAAA,EACzBtB,EAAAA,EAAAA,KAAA,QAAAsB,SAAM,eACNtB,EAAAA,EAAAA,KAAA,SAAO+B,KAAK,WAAWG,UAAU,IAAIC,UAAU,KAAKH,UAAQ,QAE9DT,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,2BACsBtB,EAAAA,EAAAA,KAACoC,EAAAA,GAAI,CAACC,GAAG,YAAWf,SAAC,gBAE9CtB,EAAAA,EAAAA,KAAA,UAAQ+B,KAAK,SAAQT,SAAC,eAI9B,E,8BCjBA,EAZc,WACZ,IAAMgB,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAE9B,OACEjB,EAAAA,EAAAA,MAAA,QAAAD,SAAA,EACEtB,EAAAA,EAAAA,KAACyC,EAAS,IACTH,IAAatC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAM,KACrB1C,EAAAA,EAAAA,KAAC2C,EAAAA,EAAY,MAGnB,C,8FCdaC,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAM,EAC/CP,EAAgB,SAAAK,GAAK,OAAIA,EAAMC,SAASR,SAAU,GAIzBU,EAAAA,EAAAA,IACpC,CAACJ,EAHyB,SAAAC,GAAK,OAAIA,EAAMI,MAAO,IAIhD,SAACH,EAAUG,GACT,OAAOH,EAASG,QAAO,SAAAC,GAAO,OAC5BA,EAAQC,KAAKC,cAAcC,SAASJ,EAAOG,cAAcE,OAAO,GAEpE,G","sources":["components/Notification/Notification.jsx","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/Login.jsx","redux/selectors.js"],"sourcesContent":["import { ToastContainer } from 'react-toastify';\nimport { Zoom } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction Notification() {\n  return (\n    <ToastContainer\n      position=\"top-right\"\n      autoClose={2500}\n      hideProgressBar\n      newestOnTop\n      closeOnClick\n      rtl={false}\n      pauseOnFocusLoss\n      draggable={false}\n      pauseOnHover={false}\n      theme=\"colored\"\n      transition={Zoom}\n      style={{ opacity: '0.8' }}\n    />\n  );\n}\n\nexport default Notification;\n","import styled from 'styled-components';\n\nexport const StyledLoginForm = styled.div`\n  display: inline-block;\n  width: 100vw;\n\n  form {\n    width: 600px;\n    height: 500px;\n    margin: 100px auto;\n    padding: 50px;\n    position: relative;\n    background-color: #fff;\n    border-radius: 10px;\n    box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px,\n      rgba(0, 0, 0, 0.23) 0px 6px 6px;\n  }\n\n  h2 {\n    font-size: 40px;\n    margin-bottom: 30px;\n    font-family: 'REM';\n    margin: 0 auto 60px;\n    display: block;\n    width: 107px;\n  }\n\n  h2 span {\n    color: #fff500;\n  }\n\n  img {\n    width: 25px;\n    height: 13px;\n    position: absolute;\n    top: 90px;\n    left: 45%;\n    animation: flipInYVisible 2000ms ease both;\n  }\n\n  label {\n    width: 313px;\n    height: 25px;\n    margin: 0 120px 13px auto;\n    display: block;\n  }\n\n  label.password {\n    width: 344px;\n    margin: 0 120px 30px auto;\n  }\n\n  span {\n    margin: 2px 20px 0 0;\n  }\n\n  input {\n    width: 250px;\n    padding: 3px 10px;\n    border: 1px solid #bbbbbb;\n    font-size: 13px;\n    outline: none;\n    color: #737373;\n    border-radius: 5px;\n  }\n\n  input:valid {\n    color: black;\n  }\n\n  button {\n    margin: 0 auto;\n    display: block;\n    width: 160px;\n    padding: 11px;\n    border: none;\n    border-radius: 20px;\n    font-size: 16px;\n    font-weight: 800;\n    letter-spacing: 0.1em;\n    background-color: #fff500;\n    transition: box-shadow 250ms ease;\n  }\n\n  button:hover {\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 6px -1px,\n      rgba(0, 0, 0, 0.06) 0px 2px 4px -1px;\n  }\n\n  p {\n    text-align: center;\n    font-size: 14px;\n    margin-bottom: 20px;\n  }\n\n  a {\n    color: black;\n    padding: 3px;\n    font-weight: bolder;\n  }\n`;\n","import { StyledLoginForm } from './LoginForm.styled';\nimport { Link } from 'react-router-dom';\nimport user from '../../images/userIcon.png';\nimport { useNavigate } from 'react-router-dom';\n\nconst LoginForm = () => {\n  const navigate = useNavigate();\n\n  const habndlerSubmit = evt => {\n    evt.preventDefault();\n    navigate('/contacts', { replace: true });\n  };\n\n  return (\n    <StyledLoginForm>\n      <form onSubmit={habndlerSubmit}>\n        <h2>\n          Login<span>.</span>\n        </h2>\n        <img src={user} alt=\"icon\" />\n        <label>\n          <span>Email </span>\n          <input type=\"email\" required />\n        </label>\n        <label className=\"password\">\n          <span>Password </span>\n          <input type=\"password\" minLength=\"6\" maxLength=\"12\" required />\n        </label>\n        <p>\n          Don't have an account? <Link to=\"/register\">Sign up</Link>\n        </p>\n        <button type=\"Submit\">LOG IN</button>\n      </form>\n    </StyledLoginForm>\n  );\n};\n\nexport default LoginForm;\n","import Loader from 'components/Loader/Loader';\nimport LoginForm from 'components/LoginForm/LoginForm';\nimport Notification from 'components/Notification/Notification';\nimport { useSelector } from 'react-redux';\nimport { selectLoading } from 'redux/selectors';\n\nconst Login = () => {\n  const isLoading = useSelector(selectLoading);\n\n  return (\n    <main>\n      <LoginForm/>\n      {isLoading && <Loader />}\n      <Notification />\n    </main>\n  );\n};\n\nexport default Login;","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase().trim())\n    );\n  }\n);\n"],"names":["_jsx","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","transition","Zoom","style","opacity","StyledLoginForm","styled","_templateObject","_taggedTemplateLiteral","navigate","useNavigate","children","_jsxs","onSubmit","evt","preventDefault","replace","src","user","alt","type","required","className","minLength","maxLength","Link","to","isLoading","useSelector","selectLoading","LoginForm","Loader","Notification","selectContacts","state","contacts","items","createSelector","filter","contact","name","toLowerCase","includes","trim"],"sourceRoot":""}